FROM --platform=$BUILDPLATFORM ubuntu:focal as downloader


SHELL ["/bin/bash", "-o", "pipefail", "-c"]
RUN mkdir -p /var/lib/jetty/webapps

RUN apt-get update && apt-get install -y --no-install-recommends unzip

WORKDIR /tmp/geonetwork
COPY war/geonetwork.war .
RUN unzip geonetwork.war -d geonetwork
# Protect kibnana dashboards
RUN sed -i "s/<sec:filter-chain\s* pattern=\"\/dashboards\/\*\*\"\s* filters=\"\"/<sec:filter-chain pattern=\"\/dashboards\/**\" filters=\"securityContextPersistenceFilter, adminUserFilter\"/" "geonetwork/WEB-INF/config-security/config-security-core.xml"
#RUN    cat "web/src/main/webapp/WEB-INF/config-security/config-security-core.xml" | grep dashboards





#####################################################################
FROM tomcat:8.5-jdk8 as final

ARG DATA_DIR
ARG ES_DUMP_VER


RUN test -n "$DATA_DIR"

ENV NODE_VERSION 18.0.0
ENV ES_DUMP_VER=${ES_DUMP_VER:-latest}

ENV CATALINA_OPTS "-Dgeonetwork.dir=$DATA_DIR -Dgeonetwork.schema.dir=/usr/local/tomcat/webapps/geonetwork/WEB-INF/data/config/schema_plugins -Dgeonetwork.formatter.dir=/usr/local/tomcat/webapps/geonetwork/WEB-INF/data/data/formatter"
ENV JAVA_OPTS "-Xmx2048M -Xss2M -XX:+UseConcMarkSweepGC -Djava.security.egd=file:/dev/./urandom -Djava.awt.headless=true"

SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# Install elasticdump (and required node.js) and pgsync
RUN ARCH= && dpkgArch="$(dpkg --print-architecture)" \
    && case "${dpkgArch##*-}" in \
      amd64) ARCH='x64';; \
      ppc64el) ARCH='ppc64le';; \
      s390x) ARCH='s390x';; \
      arm64) ARCH='arm64';; \
      armhf) ARCH='armv7l';; \
      i386) ARCH='x86';; \
      *) echo "unsupported architecture"; exit 1 ;; \
    esac \
    # gpg keys listed at https://github.com/nodejs/node#release-keys \
    && set -ex \
    && for key in \
      4ED778F539E3634C779C87C6D7062848A1AB005C \
      141F07595B7B3FFE74309A937405533BE57C7D57 \
      94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \
      74F12602B6F1C4E913FAA37AD3A89613643B6201 \
      71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \
      8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \
      C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \
      C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C \
      DD8F2338BAE7501E3DD5AC78C273792F7D83545D \
      A48C2BEE680E841632CD4E44F07496B3EB3C1762 \
      108F52B48DB57BB0CC439B2997B01419BD92F80A \
      B9E2F5981AA6E0CD28160D9FF13993A75599653C \
    ; do \
        gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys "$key" || \
        gpg --batch --keyserver keyserver.ubuntu.com --recv-keys "$key" ; \
      done \
    && curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz" \
    && curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc" \
    && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \
    && grep " node-v$NODE_VERSION-linux-$ARCH.tar.xz\$" SHASUMS256.txt | sha256sum -c - \
    && tar -xJf "node-v$NODE_VERSION-linux-$ARCH.tar.xz" -C /usr/local --strip-components=1 --no-same-owner \
    && rm "node-v$NODE_VERSION-linux-$ARCH.tar.xz" SHASUMS256.txt.asc SHASUMS256.txt \
    && ln -s /usr/local/bin/node /usr/local/bin/nodejs \
    # smoke tests
    && node --version \
    && npm --version \
    # Install elasticdump
    && npm install elasticdump@${ES_DUMP_VER} -g \
    && elasticdump --version

RUN apt-get update && apt-get install --no-install-recommends -y \
      ruby \
      libpq5 \
      ruby-dev \
      libpq-dev \
      build-essential\
    && gem install pgsync \
    && pgsync --version \
    && apt-get autoremove -y ruby-dev libpq-dev build-essential


COPY --from=downloader /tmp/geonetwork/geonetwork ${CATALINA_HOME}/webapps/geonetwork

RUN cp "${CATALINA_HOME}"/webapps/geonetwork/WEB-INF/lib/postgresql-*.jar "${CATALINA_HOME}/lib" \
    && mkdir -p ${DATA_DIR}

COPY ./datasync/ /opt/datasync/
RUN ls -lah /opt/datasync

COPY ./entrypoint.sh  /entrypoint.sh
ENTRYPOINT [ "/entrypoint.sh" ]
CMD ["catalina.sh", "run"]
EXPOSE 8080 8009
